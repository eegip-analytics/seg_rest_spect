EEG = pop_loadset('filename','[batch_dfn]','filepath','[batch_dfp]');
EEG = eeg_checkset( EEG );

% add STUDY variables

EEG.subject = EEG.filename(6:9); %loads pid
EEG.session = str2num(EEG.filename(16:17));

EEG.condition = ''; 
EEG.group = '';

fid = fopen('derivatives/seg_rest_spect/code/misc/boston_participants.csv','r'); %load participant log
rline = fgetl(fid);
while ischar(rline);
    splitline = strsplit(rline,',');
    subj = splitline(1);
    if strcmp(EEG.subject,subj); %identify gender/risk/outcome
        risk = splitline(2);
	    risk = str2num(risk{1});
	    outcome = splitline(3);
	    outcome = str2num(outcome{1});
	    gender = splitline(4);
   	    EEG.condition = gender{:};
        if risk==1;
	        if outcome==0;
	            EEG.group = 'HRA-';
            elseif outcome==1;
	            EEG.group = 'HRA+';
	        else;
	            EEG.group = 'HRA_UKN';
	        end;
	    elseif risk==2;
            if outcome==0;
	            EEG.group = 'LRC-';
            elseif outcome==1;
                EEG.group = 'LRC+';
            else;
                EEG.group = 'LRC_UKN';
            end;
        elseif risk==3;
            if outcome==0'
                EEG.group = 'lang-';
            elseif outcome==1;
                EEG.group = 'lang+'
            else;
                EEG.group = 'lang_UKN'
            end;
        else;
            EEG.group = 'UKN_UKN';
        end;
    end;
    rline = fgetl(fid);
end;
fclose(fid);

if strcmp(EEG.group,'');
    EEG.group = 'NA';
end

if strcmp(EEG.condition,'');
    EEG.condition = 'NA';
end

% Removed flagged channels and time segments

EEG = pop_marks_select_data(EEG,'channel marks',[],'labels',{'manual','rank'},'remove','on');
EEG = pop_marks_select_data(EEG,'time marks',[],'labels',{'manual'},'remove','on');
EEG = pop_marks_select_data(EEG,'component marks',[],'labels',{'manual'},'remove','on');
EEG = eeg_checkset(EEG);

% 4-sec, 50% overlapping windows
EEG = marks_continuous2epochs(EEG,'recurrence',2,'limits',[0 4],'keepboundary','off','eventtype','rest');

%% interpolate to the 19 channel 10/20 montage
EEG = warp_locs(EEG,'code/misc/standard_1020_bucanl19.elc', ...
                'transform',[0,0,0,0,0,-1.57,1,1,1],'manual','off');
EEG = interp_mont(EEG,'code/misc/standard_1020_bucanl19.elc','manual','off');
EEG.chaninfo.nosedir = '+Y';
EEG = eeg_checkset(EEG);

sprintf('%s','Purging data...\n');
%purge unnecessary fields...
for i=1:length(EEG.marks.time_info);
    EEG.marks.time_info(i).flags=[];
end
EEG.data_sd_ep=[];
EEG.c_data_sd_ep=[];
EEG.data_sd_ch=[];
EEG.c_data_sd_ch=[];
EEG.m_neigbr_r_ch=[];
EEG.c_neigbr_r_ch=[];
EEG.m_neigbr_r_lat=[];
EEG.c_neigbr_r_lat=[];
EEG.amica=[];
EEG.icaact_sd1_lat=[];
EEG.c_icaact1_sd_lat=[];
EEG.icaact_sd2_lat=[];
EEG.c_icaact_sd2_lat=[];
EEG.icaact_ta_lat=[];
EEG.c_icaact_ta_lat=[];
EEG.icaact_b_lat=[];
EEG.c_icaact_b_lat=[];
EEG.icaact = [];
EEG.icawinv = [];
EEG.icasphere = [];
EEG.icaweights = [];
EEG.icachansind = [];

% downsample the data to 250hz
EEG = pop_resample( EEG, 250);

% save output segmented file
outfname='derivatives/seg_rest_spect/[/,1,batch_dfn,_,-2]_desc-SEGrest_eeg.set'
[outpath outname outext] = fileparts(outfname);
if ~exist(outpath,'dir');
    mkdir(outpath);
end
EEG = pop_saveset( EEG, 'filename',outfname);

